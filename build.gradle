plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'de.nilzbu'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    implementation 'jakarta.platform:jakarta.jakartaee-api:+'
    implementation 'io.jsonwebtoken:jjwt-api:+'
    implementation 'io.jsonwebtoken:jjwt-gson:+'
    implementation 'io.jsonwebtoken:jjwt-impl:+'
    implementation 'io.jsonwebtoken:jjwt-extensions:+'
    implementation 'mysql:mysql-connector-java:+'
    implementation 'org.hibernate:hibernate-core:+'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.register('buildFrontend', Exec) {
    if (System.properties['os.name'].toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', 'cd demo-Front && ng build && xcopy dist\\demo-Front\\* ..\\src\\main\\resources\\static\\ /Y /E'
    } else {
        commandLine 'sh', '-c', 'cd demo-Front && ng build && cp -r dist/demo-Front/* ../src/main/resources/static/'
    }
}

tasks.register("buildJar") {
    dependsOn('shadowJar')
}

shadowJar {
    from sourceSets.main.resources
    configurations = [project.configurations.runtimeClasspath]
    mergeServiceFiles()

    archiveBaseName = 'DayValues'
    archiveVersion = '1.0'
    archiveClassifier = ''

    manifest {
        attributes(
                'Main-Class': 'de.nilzbu.demo.Application'
        )
    }
}

tasks.named('build').configure {
    dependsOn 'buildFrontend'
}

bootRun.dependsOn 'buildFrontend'